name: Validate 'setup-python'
on: 
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  schedule:
    - cron: 0 0 * * *

jobs:
  default-version:
    name: Setup default version
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-16.04, ubuntu-18.04]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: setup default python 
      uses: ./

    - name: Validate version
      run: python --version

    - name: Run simple python code
      run: python -c 'import math; print(math.factorial(5))'

  setup-versions-from-manifest:
    name: Setup ${{ matrix.python }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-16.04, ubuntu-18.04]
        python: [3.5.4, 3.6.7, 3.7.5, 3.8.1]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: setup-python ${{ matrix.python }}
      uses: ./
      with:
        python-version: ${{ matrix.python }}

    - name: Validate version
      run: |
        $pythonVersion = (python --version)
        if ("Python ${{ matrix.python }}" -ne "$pythonVersion"){
          Write-Host "The current version is $pythonVersion; expected version is ${{ matrix.python }}"
          exit 1
        }
        $pythonVersion
      shell: pwsh

    - name: Run simple code
      run: python -c 'import math; print(math.factorial(5))'

  setup-pre-release-version-from-manifest:
    name: Setup 3.9.0-beta.4 ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-16.04, ubuntu-18.04]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: setup-python 3.9.0-beta.4
      uses: ./
      with:
        python-version: '3.9.0-beta.4'

    - name: Validate version
      run: |
        $pythonVersion = (python --version)
        if ("Python 3.9.0b4" -ne "$pythonVersion"){
          Write-Host "The current version is $pythonVersion; expected version is 3.9.0b4"
          exit 1
        }
        $pythonVersion
      shell: pwsh

    - name: Run simple code
      run: python -c 'import math; print(math.factorial(5))'

# pypy-3.7-v7.3.3/
# pypy-3.x-v7.x // NOTE THIS CASE; WILL FIXED FOR NOW/
# pypy-3.6-v7.3.3/
# pypy-2-v7.3.3

# pypy-3.6-v7.3.2
# pypy-3.6-v7.3.x
# pypy-3.6-v7.x
# pypy-3.6
# pypy-3
# pypy-2

# pypy-3.6-nightly
# pypy-3.7-nightly
# pypy-3.6-v7.3.3-rc.1


  setup-pypy-versions-from-manifest:
    name: Setup ${{ matrix.python }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-16.04, ubuntu-18.04]
        pypy: ['pypy-3.7-v7.3.3', 'pypy-3.6-v7.3.3', 'pypy-3.6-v7.3.2', 'pypy-2-v7.3.3','pypy3.7-v7.3.x', 'pypy3.6-v7.3.x', 'pypy3.x-v7.3.x', 'pypy3.7-v7.x', 'pypy3.x-v7.x', 'pypy-3.6-v7.3.x', 'pypy-3.6-v7.x', 'pypy-3.6', 'pypy-3', 'pypy-2']
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: setup-python ${{ matrix.pypy }}
      uses: ./
      with:
        python-version: ${{ matrix.pypy }}

    - name: Validate version
      run: |
        $pythonVersion = (python --version)
        if ("Python ${{ matrix.pypy }}" -ne "$pythonVersion"){
          Write-Host "The current version is $pythonVersion; expected version is ${{ matrix.pypy }}"
          exit 1
        }
        $pythonVersion
      shell: pwsh

    - name: Run simple code
      run: python -c 'import math; print(math.factorial(5))'